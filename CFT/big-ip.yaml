AWSTemplateFormatVersion: 2010-09-09
Conditions:
  noCustomImageId: !Equals 
    - OPTIONAL
    - !Ref customImageId
  optin: !Equals 
    - 'Yes'
    - !Ref allowUsageAnalytics
  useDynamicExternalIpAddr: !Or 
    - !Equals 
      - DYNAMIC
      - !Ref subnet1Az1Address
    - !Equals 
      - ''
      - !Ref subnet1Az1Address
  useStaticExternalIpAddr: !Not 
    - !Or 
      - !Equals 
        - DYNAMIC
        - !Ref subnet1Az1Address
      - !Equals 
        - ''
        - !Ref subnet1Az1Address
Description: >-
  Template v4.2.0: AWS CloudFormation Template for creating a 1NIC BIG-IP in an
  existing VPC **WARNING** This template creates Amazon EC2 Instances. You will
  be billed for the AWS resources used if you create a stack from this template.
Mappings:
  BigipRegionMap:
    ap-northeast-1:
      AdvancedWaf1000Mbps: ami-0e3d020544df10bf7
      AdvancedWaf16vCPU: ami-0c9b6b081a43b4492
      AdvancedWaf200Mbps: ami-00e0fae46abce8c0b
      AdvancedWaf25Mbps: ami-005d129d388a34bc6
      AdvancedWaf8vCPU: ami-02823be2df055736d
      Best10000Mbps: ami-0580fa5a2973c32d3
      Best1000Mbps: ami-0c5a699b303fc9c71
      Best200Mbps: ami-056524dc31b358988
      Best25Mbps: ami-0d1c6870df176e68c
      Best5000Mbps: ami-0e3b59b038bb22881
      Better10000Mbps: ami-0206a0c58648c29a5
      Better1000Mbps: ami-0d16ffedd68964016
      Better200Mbps: ami-0666ab2aa78de344b
      Better25Mbps: ami-0a4aa478c214df52f
      Better5000Mbps: ami-0959bed8437c2b71e
      Good10000Mbps: ami-0626418755514175b
      Good1000Mbps: ami-0d833ec10e28bc155
      Good16vCPU: ami-07922ee35114847ae
      Good200Mbps: ami-038f209e60cd3a621
      Good25Mbps: ami-0d10c2c61d56c802b
      Good5000Mbps: ami-04efb2790887e3203
      PerAppVeAwaf200Mbps: ami-0db1d027f40f9330e
      PerAppVeAwaf25Mbps: ami-0561b43b8d24743ff
      PerAppVeLtm200Mbps: ami-0ee99f995a7d649b2
      PerAppVeLtm25Mbps: ami-0910bf5b4b754aa0e
    ap-northeast-2:
      AdvancedWaf1000Mbps: ami-025cec0c5be643858
      AdvancedWaf16vCPU: ami-0c2e2c731da5e8a56
      AdvancedWaf200Mbps: ami-025171bbcce342df6
      AdvancedWaf25Mbps: ami-099b09cc5ee802b21
      AdvancedWaf8vCPU: ami-0da039e4a331fa0f5
      Best10000Mbps: ami-06e36aab36849c8bf
      Best1000Mbps: ami-07a5f529a0b10ff0a
      Best200Mbps: ami-01c83fd54619542a2
      Best25Mbps: ami-0755fec0c4fc4801e
      Best5000Mbps: ami-0fb0c5bcbefde12f9
      Better10000Mbps: ami-0071bebff86c951e4
      Better1000Mbps: ami-0b6606eb63843ea80
      Better200Mbps: ami-0f788b49045fc91bc
      Better25Mbps: ami-012865745dafa2476
      Better5000Mbps: ami-0cf4f31579fbfc35f
      Good10000Mbps: ami-026c00a761076eede
      Good1000Mbps: ami-0f58e237977edfb0b
      Good16vCPU: ami-0ea2b09a454364e9a
      Good200Mbps: ami-0ca6a74f3cf56ec79
      Good25Mbps: ami-0a9e3bd2c34ee18ff
      Good5000Mbps: ami-030703907f4d6036b
      PerAppVeAwaf200Mbps: ami-0c73aa0b230516efc
      PerAppVeAwaf25Mbps: ami-009c1712f1c4a48ba
      PerAppVeLtm200Mbps: ami-03b230441f4765235
      PerAppVeLtm25Mbps: ami-03b0c988fad2dda53
    ap-south-1:
      AdvancedWaf1000Mbps: ami-0c3ba524a6e3dcd4c
      AdvancedWaf16vCPU: ami-032d585e4e8316861
      AdvancedWaf200Mbps: ami-08ed22f3070c1368d
      AdvancedWaf25Mbps: ami-0c7a1c22032fe2c49
      AdvancedWaf8vCPU: ami-02e4f702b75510333
      Best10000Mbps: ami-001e0c033f3849571
      Best1000Mbps: ami-0a845ff2565451834
      Best200Mbps: ami-0dbdc3876b48aa8c6
      Best25Mbps: ami-0a8e107745b6481be
      Best5000Mbps: ami-09949989593cd8871
      Better10000Mbps: ami-0adab5680330d95d2
      Better1000Mbps: ami-0e8da56cf12969535
      Better200Mbps: ami-0f57e2cd204ea3653
      Better25Mbps: ami-03d768e20c8a9388a
      Better5000Mbps: ami-00a62507ce10b561a
      Good10000Mbps: ami-02470f63a1510ada5
      Good1000Mbps: ami-0c43fe6f9ce70abee
      Good16vCPU: ami-0a297a2cf0fdc23f4
      Good200Mbps: ami-0d5242ffffb54ac0b
      Good25Mbps: ami-0d9af6ca5c10c4eba
      Good5000Mbps: ami-0408af40798dadc5d
      PerAppVeAwaf200Mbps: ami-0141548b4a9b67a6d
      PerAppVeAwaf25Mbps: ami-0c0ec6c8e4db0d284
      PerAppVeLtm200Mbps: ami-04afc555bce050e12
      PerAppVeLtm25Mbps: ami-01b819d6f7f4bbe74
    ap-southeast-1:
      AdvancedWaf1000Mbps: ami-0a7282a3ef917419d
      AdvancedWaf16vCPU: ami-03400060b572c7161
      AdvancedWaf200Mbps: ami-0d133c7c536dfb5a3
      AdvancedWaf25Mbps: ami-060ca9f55954533d4
      AdvancedWaf8vCPU: ami-0caa6f4aa28652541
      Best10000Mbps: ami-0ee1de304b8765366
      Best1000Mbps: ami-074051d2c014e4f41
      Best200Mbps: ami-009e368b9411ba909
      Best25Mbps: ami-0cf67b1b107b1ef06
      Best5000Mbps: ami-004dbbd1bdc3040ab
      Better10000Mbps: ami-0b13d48b5b8755138
      Better1000Mbps: ami-0cb773e0d4bcb72e4
      Better200Mbps: ami-0a0b8269760c99f08
      Better25Mbps: ami-0e18ffd860a5e4ca2
      Better5000Mbps: ami-03f6bbd25fe712720
      Good10000Mbps: ami-01336b94814925a5c
      Good1000Mbps: ami-0ee5aa1ba4bec17aa
      Good16vCPU: ami-0ef099f8245e559ee
      Good200Mbps: ami-0b9a3c29a83fdf1b8
      Good25Mbps: ami-0bf0a4d6fb871e2a0
      Good5000Mbps: ami-01dfeebdbaeefcb20
      PerAppVeAwaf200Mbps: ami-07286ab295b20800f
      PerAppVeAwaf25Mbps: ami-03184d66cf040dda1
      PerAppVeLtm200Mbps: ami-0874f2e9761a2cd0b
      PerAppVeLtm25Mbps: ami-0e0a5c1f28faaf9fa
    ap-southeast-2:
      AdvancedWaf1000Mbps: ami-0fc3c87b7c85bc7d7
      AdvancedWaf16vCPU: ami-0809b9c19dc695b3b
      AdvancedWaf200Mbps: ami-0e48421692c41a752
      AdvancedWaf25Mbps: ami-05585ff70ea17fa62
      AdvancedWaf8vCPU: ami-043cb5202e50d2ca7
      Best10000Mbps: ami-06d0cc88227450030
      Best1000Mbps: ami-07065e8c5942143ff
      Best200Mbps: ami-04eaeca8a0129c72d
      Best25Mbps: ami-0a6bb3e0c10593039
      Best5000Mbps: ami-0f2fbf5404007e327
      Better10000Mbps: ami-021717e24c5967116
      Better1000Mbps: ami-03de84d5082e0481b
      Better200Mbps: ami-01a45a438bcb33d83
      Better25Mbps: ami-0ccf0b3540d88d49e
      Better5000Mbps: ami-02931a33ee2940689
      Good10000Mbps: ami-0e9d276e059561fbf
      Good1000Mbps: ami-0b9b5f3f134258cd6
      Good16vCPU: ami-05f364fa5f440f5c5
      Good200Mbps: ami-0d658e8596962b6b4
      Good25Mbps: ami-0df74ce228a244a87
      Good5000Mbps: ami-03a7416f40b3e7c9d
      PerAppVeAwaf200Mbps: ami-078b554c9e615e254
      PerAppVeAwaf25Mbps: ami-04900e167db1a1c20
      PerAppVeLtm200Mbps: ami-0b579d66f683d6871
      PerAppVeLtm25Mbps: ami-0a35b593c63bc11ee
    ca-central-1:
      AdvancedWaf1000Mbps: ami-09ff9fa706f088ad2
      AdvancedWaf16vCPU: ami-0d6aa8cbea025fdc4
      AdvancedWaf200Mbps: ami-04afd59cc02d36f3d
      AdvancedWaf25Mbps: ami-0dbf5e79de5caf3df
      AdvancedWaf8vCPU: ami-078af6edc758f0374
      Best10000Mbps: ami-06810e8aed3719b63
      Best1000Mbps: ami-037fd69be7c9a89d8
      Best200Mbps: ami-0fbd680de4821a361
      Best25Mbps: ami-0df8f8b4e9dd7f108
      Best5000Mbps: ami-0a56b2a7ad7bd5cca
      Better10000Mbps: ami-07df0efc3887a6aca
      Better1000Mbps: ami-0dc0d4116257bb701
      Better200Mbps: ami-034b798ebd2331f36
      Better25Mbps: ami-061dce3e3884dec36
      Better5000Mbps: ami-0420dc4b2162bd0e5
      Good10000Mbps: ami-074ff08d1fa97f094
      Good1000Mbps: ami-0bdaf9094f0b630e1
      Good16vCPU: ami-09a2cfb28f81c6051
      Good200Mbps: ami-0e65837b2644d7071
      Good25Mbps: ami-062efc669b012994f
      Good5000Mbps: ami-078d5d7348e3cd197
      PerAppVeAwaf200Mbps: ami-02036d0f89a1b9ae1
      PerAppVeAwaf25Mbps: ami-030a3aabe47162830
      PerAppVeLtm200Mbps: ami-0c7582154a3d96aba
      PerAppVeLtm25Mbps: ami-005cb23d5240ea30b
    eu-central-1:
      AdvancedWaf1000Mbps: ami-090d527c468fda271
      AdvancedWaf16vCPU: ami-0c998ba4355503976
      AdvancedWaf200Mbps: ami-0ea107f1cf102256d
      AdvancedWaf25Mbps: ami-0de2e3489f0a1030e
      AdvancedWaf8vCPU: ami-0a9e5e359cb4dba9b
      Best10000Mbps: ami-09b0874fa71fb84eb
      Best1000Mbps: ami-0d918c7971dc07858
      Best200Mbps: ami-0f6ae0c1440880fae
      Best25Mbps: ami-09ee14b0d862cf97a
      Best5000Mbps: ami-04c1e65cf1b0d41a1
      Better10000Mbps: ami-0bfb56b5719faf265
      Better1000Mbps: ami-0b5e5578fec77b9e0
      Better200Mbps: ami-0fdca14a93aedd3d7
      Better25Mbps: ami-0856dd2241782d7c5
      Better5000Mbps: ami-09e066db189e5be5a
      Good10000Mbps: ami-0c35277fa28b2f4a5
      Good1000Mbps: ami-034918cabf2484b1c
      Good16vCPU: ami-0f3610c85c90c64dc
      Good200Mbps: ami-0a8e31dca7afc9844
      Good25Mbps: ami-0c9b1d07eb76b3dc5
      Good5000Mbps: ami-0ed1b50876a7ee363
      PerAppVeAwaf200Mbps: ami-060e4b92de99e17e1
      PerAppVeAwaf25Mbps: ami-0c20f3fe79d2fbd2c
      PerAppVeLtm200Mbps: ami-05ac1a666b1ab5a78
      PerAppVeLtm25Mbps: ami-0fd3b339c8937a7aa
    eu-north-1:
      AdvancedWaf1000Mbps: ami-9fd25ae1
      AdvancedWaf16vCPU: ami-36df5748
      AdvancedWaf200Mbps: ami-a4d159da
      AdvancedWaf25Mbps: ami-42d25a3c
      AdvancedWaf8vCPU: ami-91d058ef
      Best10000Mbps: ami-65df571b
      Best1000Mbps: ami-50de562e
      Best200Mbps: ami-69df5717
      Best25Mbps: ami-abd159d5
      Best5000Mbps: ami-71d45c0f
      Better10000Mbps: ami-64df571a
      Better1000Mbps: ami-69dd5517
      Better200Mbps: ami-5dd05823
      Better25Mbps: ami-99d058e7
      Better5000Mbps: ami-5cd05822
      Good10000Mbps: ami-5dd25a23
      Good1000Mbps: ami-5ed05820
      Good16vCPU: ami-28de5656
      Good200Mbps: ami-9ad058e4
      Good25Mbps: ami-34df574a
      Good5000Mbps: ami-3adf5744
      PerAppVeAwaf200Mbps: ami-9ed25ae0
      PerAppVeAwaf25Mbps: ami-40d25a3e
      PerAppVeLtm200Mbps: ami-94d058ea
      PerAppVeLtm25Mbps: ami-2dde5653
    eu-west-1:
      AdvancedWaf1000Mbps: ami-0c5bf3d9a852938e3
      AdvancedWaf16vCPU: ami-0a1eec63dc787d371
      AdvancedWaf200Mbps: ami-0a362a1f34295d9d4
      AdvancedWaf25Mbps: ami-05646157975cb7fdb
      AdvancedWaf8vCPU: ami-01732612964ca2f0b
      Best10000Mbps: ami-0d0258099f0da6b0e
      Best1000Mbps: ami-01cbd92c295455d51
      Best200Mbps: ami-003f4d39ac196b31b
      Best25Mbps: ami-046332f76cded4be3
      Best5000Mbps: ami-041675d048e610159
      Better10000Mbps: ami-0d1480557ce6bb302
      Better1000Mbps: ami-0b313af3f448dc8cb
      Better200Mbps: ami-027dea1710698fae3
      Better25Mbps: ami-035552defa7c2b02c
      Better5000Mbps: ami-06d14cafe12f0d031
      Good10000Mbps: ami-06a5317c31d211a5f
      Good1000Mbps: ami-0bd0a4c08cd6ec649
      Good16vCPU: ami-09e797d13f0967d08
      Good200Mbps: ami-0f98483eb05e94dab
      Good25Mbps: ami-07aed9dbb1b8f9edd
      Good5000Mbps: ami-009fd08ed416e6957
      PerAppVeAwaf200Mbps: ami-0c3655dc0cc2ae0c0
      PerAppVeAwaf25Mbps: ami-0c9046edcfbf14831
      PerAppVeLtm200Mbps: ami-0b47587ad1b6ab015
      PerAppVeLtm25Mbps: ami-046b1e11493d3f00b
    eu-west-2:
      AdvancedWaf1000Mbps: ami-0e32cfe03e178ff3e
      AdvancedWaf16vCPU: ami-03fd3730f56219692
      AdvancedWaf200Mbps: ami-0c044e91d9fbaf070
      AdvancedWaf25Mbps: ami-03fcca6b5e7361d2e
      AdvancedWaf8vCPU: ami-049dc133dedfa9c76
      Best10000Mbps: ami-05cb50ec808d50abf
      Best1000Mbps: ami-0b676fcd913751ba3
      Best200Mbps: ami-0f8d8e09823cb6e1d
      Best25Mbps: ami-0d8e8d42b31d6529a
      Best5000Mbps: ami-0e592dc3e3e865122
      Better10000Mbps: ami-09e3464350425fe4f
      Better1000Mbps: ami-07d3734f4c4a9859f
      Better200Mbps: ami-05b7d65ef1b3f83f9
      Better25Mbps: ami-0418332dc01a5610b
      Better5000Mbps: ami-0d81aa3dfdb8b8975
      Good10000Mbps: ami-0e69a515e3690466a
      Good1000Mbps: ami-06ea0cf5638232ec5
      Good16vCPU: ami-0895eb9b9f891edc8
      Good200Mbps: ami-0161b47d23448063b
      Good25Mbps: ami-0a056b8d0215b171d
      Good5000Mbps: ami-0bc7ba6401eb91000
      PerAppVeAwaf200Mbps: ami-0a01def452a7b8fd0
      PerAppVeAwaf25Mbps: ami-03e66b77f21d88b9d
      PerAppVeLtm200Mbps: ami-07b35ca5c0b82d372
      PerAppVeLtm25Mbps: ami-0b2fccbe6342e286d
    eu-west-3:
      AdvancedWaf1000Mbps: ami-07369bf6d29792644
      AdvancedWaf16vCPU: ami-0815167914460d57e
      AdvancedWaf200Mbps: ami-03c02a93aa61351cd
      AdvancedWaf25Mbps: ami-0ca1cb92beb1e24d1
      AdvancedWaf8vCPU: ami-01ac207db9a13a63a
      Best10000Mbps: ami-047d508640e6b68b8
      Best1000Mbps: ami-078e113c0f39bf5ee
      Best200Mbps: ami-0ee53ccfe910eaa4c
      Best25Mbps: ami-0a13537568b7990d1
      Best5000Mbps: ami-044baba58e03180b4
      Better10000Mbps: ami-0ca504ea934740cd0
      Better1000Mbps: ami-0446646a2c8e656ba
      Better200Mbps: ami-01843d1e552514c10
      Better25Mbps: ami-0a0ba0dacf8d10ceb
      Better5000Mbps: ami-053b709302c31b4af
      Good10000Mbps: ami-0ee35537e335867e4
      Good1000Mbps: ami-0fb7ea6cf2b86394b
      Good16vCPU: ami-025db813435181bce
      Good200Mbps: ami-071fc981e692fd738
      Good25Mbps: ami-0d69b0c6f1241274a
      Good5000Mbps: ami-01cf8463212d079ec
      PerAppVeAwaf200Mbps: ami-0825c826f926622a8
      PerAppVeAwaf25Mbps: ami-04e749e0f23b1343e
      PerAppVeLtm200Mbps: ami-0bf9ae9cedfb68e33
      PerAppVeLtm25Mbps: ami-0c8e2b0ee6d958fea
    sa-east-1:
      AdvancedWaf1000Mbps: ami-0f47a82e26517356c
      AdvancedWaf16vCPU: ami-0384ab07ff7b7e992
      AdvancedWaf200Mbps: ami-08cea931e69f0a3e1
      AdvancedWaf25Mbps: ami-02cc4ab19914ac1cb
      AdvancedWaf8vCPU: ami-033e9b202e6d65deb
      Best10000Mbps: ami-03ef7bd78ed8aded0
      Best1000Mbps: ami-09a7b0750a0f28777
      Best200Mbps: ami-0d29d40b6b0d01b72
      Best25Mbps: ami-038145cc0e5d51a66
      Best5000Mbps: ami-05880245133a09784
      Better10000Mbps: ami-0d431cb73fe57b409
      Better1000Mbps: ami-0f3dc4c71947e566f
      Better200Mbps: ami-05e4c83ee8bb31fb5
      Better25Mbps: ami-0f45010d1a6ab1f0c
      Better5000Mbps: ami-035865589776ab398
      Good10000Mbps: ami-05fc31ac050499508
      Good1000Mbps: ami-0be1bdb55bf3ec891
      Good16vCPU: ami-0147d0996f2a8d29f
      Good200Mbps: ami-0368e039bfe358b4c
      Good25Mbps: ami-001270f3b23192660
      Good5000Mbps: ami-0deb4000fa1ec37ec
      PerAppVeAwaf200Mbps: ami-0178d084fd8751067
      PerAppVeAwaf25Mbps: ami-08e2f1896c002f5c2
      PerAppVeLtm200Mbps: ami-0a564b16d5ce2741e
      PerAppVeLtm25Mbps: ami-0b12e7940703c1770
    us-east-1:
      AdvancedWaf1000Mbps: ami-04aa48a2652225fc5
      AdvancedWaf16vCPU: ami-0b086e91e94ee2892
      AdvancedWaf200Mbps: ami-0e6a35f83f20358c3
      AdvancedWaf25Mbps: ami-064db9114b29959aa
      AdvancedWaf8vCPU: ami-09de01ecec7f10143
      Best10000Mbps: ami-01ef3b3fbacc6e17a
      Best1000Mbps: ami-034baab58c9dec114
      Best200Mbps: ami-08cdb240fc2f1b628
      Best25Mbps: ami-0b1ddb58daf258014
      Best5000Mbps: ami-05c5858a99101afd3
      Better10000Mbps: ami-0a8c52327af86f4a1
      Better1000Mbps: ami-06ac11c2d02010d5f
      Better200Mbps: ami-0ea6eb089cebcd924
      Better25Mbps: ami-0a476a17856f9f0b1
      Better5000Mbps: ami-062fddc821461bdda
      Good10000Mbps: ami-0a839af94b78cd2a0
      Good1000Mbps: ami-055f8b19ff2454de1
      Good16vCPU: ami-09d55b772f0363b78
      Good200Mbps: ami-0e32d98197a6bc8c7
      Good25Mbps: ami-00a9fd893d5d15cf6
      Good5000Mbps: ami-0508de3953df2e4db
      PerAppVeAwaf200Mbps: ami-0ea0876b5681a64d8
      PerAppVeAwaf25Mbps: ami-0d28439414dc7495b
      PerAppVeLtm200Mbps: ami-0ffbf0cfa793e6bd0
      PerAppVeLtm25Mbps: ami-02de15edebef8f2c7
    us-east-2:
      AdvancedWaf1000Mbps: ami-0e6aa23fd7721bd9a
      AdvancedWaf16vCPU: ami-0c3c7a1009401b601
      AdvancedWaf200Mbps: ami-0293e1e179a87f3b9
      AdvancedWaf25Mbps: ami-08f9be0e84354adb8
      AdvancedWaf8vCPU: ami-092871fe912f4678a
      Best10000Mbps: ami-0b1c7856caf86871a
      Best1000Mbps: ami-0ce33612bd3dc344c
      Best200Mbps: ami-043ded16d331257c7
      Best25Mbps: ami-07b978ff1e31c60f9
      Best5000Mbps: ami-0d914b42ef924b9e1
      Better10000Mbps: ami-0c072a3afd9d0a850
      Better1000Mbps: ami-00840b824aa5320bd
      Better200Mbps: ami-0a8599d2469b8f95c
      Better25Mbps: ami-04a8f74fc1a0efc9a
      Better5000Mbps: ami-0652b1acf76c50c6f
      Good10000Mbps: ami-031fb310ee3df8ec7
      Good1000Mbps: ami-02db89135588778a0
      Good16vCPU: ami-05a1389f342e3a0ad
      Good200Mbps: ami-05973aa9c0a73ca1d
      Good25Mbps: ami-057d4c8d46f2fb9f5
      Good5000Mbps: ami-04d4a14415939f49c
      PerAppVeAwaf200Mbps: ami-0c0bc837a07e349ed
      PerAppVeAwaf25Mbps: ami-0c487e95ee7ec1a4f
      PerAppVeLtm200Mbps: ami-0fd3e20cabfc3b158
      PerAppVeLtm25Mbps: ami-057cb1b6c26799a28
    us-gov-west-1:
      AdvancedWaf1000Mbps: ami-be7204df
      AdvancedWaf16vCPU: ami-df1761be
      AdvancedWaf200Mbps: ami-b57503d4
      AdvancedWaf25Mbps: ami-8a7402eb
      AdvancedWaf8vCPU: ami-720c7a13
      Best10000Mbps: ami-9d196ffc
      Best1000Mbps: ami-ec50268d
      Best200Mbps: ami-9e5e28ff
      Best25Mbps: ami-e5532584
      Best5000Mbps: ami-735f2912
      Better10000Mbps: ami-920c7af3
      Better1000Mbps: ami-ce691faf
      Better200Mbps: ami-5e681e3f
      Better25Mbps: ami-da6315bb
      Better5000Mbps: ami-46542227
      Good10000Mbps: ami-6f12640e
      Good1000Mbps: ami-0e72046f
      Good16vCPU: ami-fa11679b
      Good200Mbps: ami-5a0a7c3b
      Good25Mbps: ami-e7057386
      Good5000Mbps: ami-e67c0a87
      PerAppVeAwaf200Mbps: ami-45087e24
      PerAppVeAwaf25Mbps: ami-4d76002c
      PerAppVeLtm200Mbps: ami-e4295f85
      PerAppVeLtm25Mbps: ami-7d16601c
    us-west-1:
      AdvancedWaf1000Mbps: ami-0775b83835e6b3e77
      AdvancedWaf16vCPU: ami-0d87a34c510a4b5cb
      AdvancedWaf200Mbps: ami-0f46cd43fc739cfad
      AdvancedWaf25Mbps: ami-0e90cf1585330b52f
      AdvancedWaf8vCPU: ami-0f2b00a4c6ab1f4c4
      Best10000Mbps: ami-0e2a267d4220f4890
      Best1000Mbps: ami-0114dc0c4df38b29b
      Best200Mbps: ami-0fbf0d00e39f7a864
      Best25Mbps: ami-0972a8db61e5da370
      Best5000Mbps: ami-0b352e90bd5f0e6cf
      Better10000Mbps: ami-0dfb3081e6137f105
      Better1000Mbps: ami-0d3065d05191dea83
      Better200Mbps: ami-075a99b21c7d3f358
      Better25Mbps: ami-08a02d4ddd16277ec
      Better5000Mbps: ami-0e0b842da17286214
      Good10000Mbps: ami-0faf274528f543841
      Good1000Mbps: ami-02248ed25defcf859
      Good16vCPU: ami-0c77b1274ee9dd975
      Good200Mbps: ami-0317c3a881ee29b7c
      Good25Mbps: ami-04f363b5aec06d0cf
      Good5000Mbps: ami-01d84776c008dd8e2
      PerAppVeAwaf200Mbps: ami-0045f90a6b053d9b5
      PerAppVeAwaf25Mbps: ami-0a61c0fb24d9f3ee1
      PerAppVeLtm200Mbps: ami-0d0af322acf6e5360
      PerAppVeLtm25Mbps: ami-0ffdbe8584a7eb460
    us-west-2:
      AdvancedWaf1000Mbps: ami-0b8527ec601d0ee88
      AdvancedWaf16vCPU: ami-03603a0cbac6942a4
      AdvancedWaf200Mbps: ami-0d95fe1297d065336
      AdvancedWaf25Mbps: ami-0e98257ac6452b200
      AdvancedWaf8vCPU: ami-012d948919b261942
      Best10000Mbps: ami-0b7dfa04e16748d4a
      Best1000Mbps: ami-0859fa4a011a1cbc8
      Best200Mbps: ami-0e08ff376531d1647
      Best25Mbps: ami-022d19a6bfc1cbf61
      Best5000Mbps: ami-0ac2a7de10418974f
      Better10000Mbps: ami-017b1301feac5f0c0
      Better1000Mbps: ami-031ffd3d4362f7a94
      Better200Mbps: ami-0751b2f848b45d048
      Better25Mbps: ami-0f5235067a9d2f39e
      Better5000Mbps: ami-098da20925f73c229
      Good10000Mbps: ami-01c5eb85d1bc17ae4
      Good1000Mbps: ami-0659b06e79b146b53
      Good16vCPU: ami-0af566788d22f3f55
      Good200Mbps: ami-026cab5e24ef0d680
      Good25Mbps: ami-04aeb21365c18ca08
      Good5000Mbps: ami-02b8458aad4b74e57
      PerAppVeAwaf200Mbps: ami-0c1a15b0e7b47ed00
      PerAppVeAwaf25Mbps: ami-0ebe160f8376b4732
      PerAppVeLtm200Mbps: ami-0bf8e0290db3db405
      PerAppVeLtm25Mbps: ami-0e7e9641d6846adbc
Metadata:
  'AWS::CloudFormation::Interface':
    ParameterGroups:
      - Label:
          default: NETWORKING CONFIGURATION
        Parameters:
          - Vpc
          - managementSubnetAz1
          - managementSubnetAz1Address
          - managementSubnetAz2
          - subnet1Az1
          - subnet1Az1Address
          - subnet1Az2
          - subnet2Az1
          - subnet2Az1Address
          - subnet2Az2
          - availabilityZone1
          - availabilityZone2
          - numberOfAdditionalNics
          - additionalNicLocation
      - Label:
          default: INSTANCE CONFIGURATION
        Parameters:
          - imageName
          - customImageId
          - instanceType
          - applicationInstanceType
          - licenseKey1
          - licenseKey2
          - managementGuiPort
          - sshKey
          - restrictedSrcAddress
          - restrictedSrcAddressApp
          - ntpServer
          - timezone
          - AdminPW
      - Label:
          default: TAGS
        Parameters:
          - application
          - environment
          - group
          - owner
          - costcenter
      - {}
      - Label:
          default: TEMPLATE ANALYTICS
        Parameters:
          - allowUsageAnalytics
      - Label:
          default: VIRTUAL SERVICE CONFIGURATION
        Parameters:
          - declarationUrl
    ParameterLabels:
      Vpc:
        default: VPC
      additionalNicLocation:
        default: Additional NIC Location
      allowUsageAnalytics:
        default: Send Anonymous Statistics to F5
      application:
        default: Application
      applicationInstanceType:
        default: Application Instance Type
      availabilityZone1:
        default: Availability Zone 1
      availabilityZone2:
        default: Availability Zone 2
      costcenter:
        default: Cost Center
      customImageId:
        default: Custom Image Id
      declarationUrl:
        default: AS3 Declaration URL
      environment:
        default: Environment
      group:
        default: Group
      imageName:
        default: BIG-IP Image Name
      instanceType:
        default: AWS Instance Size
      licenseKey1:
        default: License Key 1
      licenseKey2:
        default: License Key 2
      managementGuiPort:
        default: BIG-IP Management Port
      managementSubnetAz1:
        default: Management Subnet AZ1
      managementSubnetAz1Address:
        default: Management Subnet AZ1 Static IP Address
      managementSubnetAz2:
        default: Management Subnet AZ2
      ntpServer:
        default: NTP Server
      numberOfAdditionalNics:
        default: Number Of Additional NICs
      owner:
        default: Owner
      restrictedSrcAddress:
        default: Source Address(es) for Management Access
      restrictedSrcAddressApp:
        default: Source Address(es) for Web Application Access (80/443)
      sshKey:
        default: SSH Key
      subnet1Az1:
        default: Subnet1 in AZ1
      subnet1Az1Address:
        default: Subnet1 AZ1 Static IP Addresses
      subnet1Az2:
        default: Subnet1 in AZ2
      subnet2Az1:
        default: Subnet2 in AZ1
      subnet2Az1Address:
        default: Subnet2 AZ1 Static IP Address
      subnet2Az2:
        default: Subnet2 in AZ2
      timezone:
        default: Timezone (Olson)
      AdminPW:
        default: Admin Password - bad practice but DEMO  
  Version: 4.2.0
Outputs:
  Bigip1ExternalInterfacePrivateIp:
    Description: Internally routable IP of the public interface on BIG-IP
    Value: !If 
      - useDynamicExternalIpAddr
      - !GetAtt 
        - Bigip1subnet1Az1Interface
        - PrimaryPrivateIpAddress
      - !GetAtt 
        - Bigip1Staticsubnet1Az1Interface
        - PrimaryPrivateIpAddress
  Bigip1InstanceId:
    Description: Instance Id of BIG-IP in Amazon
    Value: !Ref Bigip1Instance
  Bigip1Url:
    Description: BIG-IP Management GUI
    Value: !Join 
      - ''
      - - 'https://'
        - !GetAtt 
          - Bigip1Instance
          - PublicIp
        - ':'
        - !Ref managementGuiPort
  Bigip1VipEipAddress:
    Description: EIP address for VIP
    Value: !Join 
      - ''
      - - 'http://'
        - !GetAtt 
          - Bigip1Instance
          - PublicIp
        - ':80'
  Bigip1subnet1Az1Interface:
    Description: External interface Id on BIG-IP
    Value: !If 
      - useDynamicExternalIpAddr
      - !Ref Bigip1subnet1Az1Interface
      - !Ref Bigip1Staticsubnet1Az1Interface
  Bigip1subnet1Az1SelfEipAddress:
    Description: IP Address of the External interface attached to BIG-IP
    Value: !Ref Bigip1subnet1Az1SelfEipAddress
  availabilityZone1:
    Description: Availability Zone
    Value: !GetAtt 
      - Bigip1Instance
      - AvailabilityZone
  bigipExternalSecurityGroup:
    Description: Public or External Security Group
    Value: !Ref bigipExternalSecurityGroup
Parameters:
  Vpc:
    ConstraintDescription: This must be an existing VPC within the working region.
    Type: 'AWS::EC2::VPC::Id'
  allowUsageAnalytics:
    AllowedValues:
      - 'Yes'
      - 'No'
    Default: 'Yes'
    Description: >-
      This deployment can send anonymous statistics to F5 to help us determine
      how to improve our solutions. If you select **No** statistics are not
      sent.
    Type: String
  application:
    Default: f5app
    Description: Name of the Application Tag
    Type: String
  costcenter:
    Default: f5costcenter
    Description: Name of the Cost Center Tag
    Type: String
  customImageId:
    ConstraintDescription: Must be a valid AMI Id
    Default: OPTIONAL
    Description: >-
      If you would like to deploy using a custom BIG-IP image, provide the AMI
      Id.  **Note**: Unless specifically required, leave the default of
      **OPTIONAL**
    MaxLength: 255
    MinLength: 1
    Type: String
  declarationUrl:
    AllowedPattern: >-
      ^(http:\/\/|https:\/\/)?[a-z0-9]+([\-\.]{1}[a-z0-9]+)*\.[a-z]{2,5}(:[0-9]{1,5})?(\/.*)?$|^none$
    Default: none
    Description: >-
      URL for the AS3 declaration JSON file to be deployed. Leave as **none** to
      deploy without a service configuration.
    Type: String
  environment:
    Default: f5env
    Description: Name of the Environment Tag
    Type: String
  group:
    Default: f5group
    Description: Name of the Group Tag
    Type: String
  imageName:
    AllowedValues:
      - Good25Mbps
      - Good200Mbps
      - Good1000Mbps
      - Good5000Mbps
      - Good10000Mbps
      - Good16vCPU
      - Better25Mbps
      - Better200Mbps
      - Better1000Mbps
      - Better5000Mbps
      - Better10000Mbps
      - Best25Mbps
      - Best200Mbps
      - Best1000Mbps
      - Best5000Mbps
      - Best10000Mbps
      - AdvancedWaf25Mbps
      - AdvancedWaf200Mbps
      - AdvancedWaf1000Mbps
      - AdvancedWaf8vCPU
      - AdvancedWaf16vCPU
      - PerAppVeAwaf25Mbps
      - PerAppVeAwaf200Mbps
      - PerAppVeLtm25Mbps
      - PerAppVeLtm200Mbps
    ConstraintDescription: Must be a valid F5 BIG-IP VE image type
    Default: Best1000Mbps
    Description: F5 BIG-IP Performance Type
    Type: String
  instanceType:
    AllowedValues:
      - m5.xlarge
      - m5.4xlarge
      - m5.large
      - m5.12xlarge
      - m4.xlarge
      - m4.large
      - m4.4xlarge
      - m4.2xlarge
      - m4.16xlarge
      - m4.10xlarge
      - m3.xlarge
      - m3.medium
      - m3.large
      - m3.2xlarge
      - cc2.8xlarge
      - c5.xlarge
      - c5.large
      - c5.4xlarge
      - c5.9xlarge
      - c4.xlarge
      - c4.8xlarge
      - c4.4xlarge
      - c4.2xlarge
      - c3.xlarge
      - c3.8xlarge
      - c3.4xlarge
      - c3.2xlarge
      - c5n.2xlarge
      - c5n.4xlarge
    ConstraintDescription: Must be a valid EC2 instance type for BIG-IP
    Default: m5.xlarge
    Description: Size of the F5 BIG-IP Virtual Instance
    Type: String
  managementGuiPort:
    ConstraintDescription: 'Must be a valid, unused port on the BIG-IP.'
    Default: '8443'
    Description: Port for the BIG-IP management Configuration utility
    Type: Number
  ntpServer:
    Default: 0.pool.ntp.org
    Description: NTP server for this implementation
    Type: String
  owner:
    Default: f5owner
    Description: Name of the Owner Tag
    Type: String
  restrictedSrcAddress:
    AllowedPattern: '(\d{1,3})\.(\d{1,3})\.(\d{1,3})\.(\d{1,3})/(\d{1,2})'
    ConstraintDescription: Must be a valid IP CIDR range of the form x.x.x.x/x.
    Description: ' The IP address range used to SSH and access managment GUI on the EC2 instances'
    MaxLength: '18'
    MinLength: '9'
    Type: String
  restrictedSrcAddressApp:
    AllowedPattern: '(\d{1,3})\.(\d{1,3})\.(\d{1,3})\.(\d{1,3})/(\d{1,2})'
    ConstraintDescription: Must be a valid IP CIDR range of the form x.x.x.x/x.
    Description: ' The IP address range that can be used to access web traffic (80/443) to the EC2 instances'
    MaxLength: '18'
    MinLength: '9'
    Type: String
  sshKey:
    Description: EC2 KeyPair to enable SSH access to the BIG-IP instance
    Type: 'AWS::EC2::KeyPair::KeyName'
  subnet1Az1:
    ConstraintDescription: The subnet ID must be within an existing VPC
    Description: Public or External subnet
    Type: 'AWS::EC2::Subnet::Id'
  subnet1Az1Address:
    Default: DYNAMIC
    Description: >-
      Optional. If you want to assign static IP address(es) in the subnet, type
      them here.  Separate multiple IP addresses with a comma (the first is the
      Primary IP address, all others are Secondary).  Otherwise leave DYNAMIC
      and a dynamic address is assigned based on the subnet you specified.
    Type: String
  timezone:
    Default: UTC
    Description: >-
      Olson timezone string. Acceptable values can be found from
      /usr/share/zoneinfo directory located on BIG-IP. Also, see
      https://en.wikipedia.org/wiki/List_of_tz_database_time_zones referencing
      the TZ* column for Olsen timezone examples.
    Type: String
  S3Bucket:
    Description: location of the templates and keys
    Type: String
  DemoPublicKey: 
    Description: The public key to enable auth within this demo
    Default: key.pub
    Type: String 
  AdminPW:
    Description: admin password
    Type: String  
Resources:
  Bigip1Instance:
    Metadata:
      'AWS::CloudFormation::Init':
        config:
          commands:
            000-disable-1nicautoconfig:
              command: /usr/bin/setdb provision.1nicautoconfig disable
            010-install-libs:
              command: !Join 
                - ' '
                - - mkdir -p /var/log/cloud/aws;
                  - nohup /config/installCloudLibs.sh
                  - '&>> /var/log/cloud/aws/install.log < /dev/null &'
            020-generate-password:
              command: !Join 
                - ''
                - - nohup /config/waitThenRun.sh
                  - ' f5-rest-node /config/cloud/aws/node_modules/@f5devcentral/f5-cloud-libs/scripts/runScript.js'
                  - ' --signal PASSWORD_CREATED'
                  - ' --file f5-rest-node'
                  - ' --cl-args ''/config/cloud/aws/node_modules/@f5devcentral/f5-cloud-libs/scripts/generatePassword --file /config/cloud/aws/.adminPassword --encrypt'''
                  - ' --log-level silly'
                  - ' -o /var/log/cloud/aws/generatePassword.log'
                  - ' &>> /var/log/cloud/aws/install.log < /dev/null'
                  - ' &'
            030-create-admin-user:
              command: !Join 
                - ''
                - - nohup /config/waitThenRun.sh
                  - ' f5-rest-node /config/cloud/aws/node_modules/@f5devcentral/f5-cloud-libs/scripts/runScript.js'
                  - ' --wait-for PASSWORD_CREATED'
                  - ' --signal ADMIN_CREATED'
                  - ' --file /config/cloud/aws/node_modules/@f5devcentral/f5-cloud-libs/scripts/createUser.sh'
                  - ' --cl-args ''--user admin'
                  - ' --password-file /config/cloud/aws/.adminPassword'
                  - ' --password-encrypted'
                  - ''''
                  - ' --log-level silly'
                  - ' -o /var/log/cloud/aws/createUser.log'
                  - ' &>> /var/log/cloud/aws/install.log < /dev/null'
                  - ' &'
            040-network-config:
              command: !Join 
                - ''
                - - 'nohup /config/waitThenRun.sh '
                  - >-
                    f5-rest-node
                    /config/cloud/aws/node_modules/@f5devcentral/f5-cloud-libs/scripts/runScript.js 
                  - >-
                    --file
                    /config/cloud/aws/node_modules/@f5devcentral/f5-cloud-libs/scripts/aws/1nicSetup.sh 
                  - >-
                    --cwd
                    /config/cloud/aws/node_modules/@f5devcentral/f5-cloud-libs/scripts/aws 
                  - '--log-level silly '
                  - '-o /var/log/cloud/aws/1nicSetup.log '
                  - '--wait-for ADMIN_CREATED '
                  - '--signal NETWORK_CONFIG_DONE '
                  - '&>> /var/log/cloud/aws/install.log < /dev/null &'
            050-onboard-BIG-IP:
              command: !If 
                - optin
                - !Join 
                  - ' '
                  - - REGION="
                    - !Ref 'AWS::Region'
                    - '";'
                    - DEPLOYMENTID=`echo "
                    - !Ref 'AWS::StackId'
                    - '"|sha512sum|cut -d " " -f 1`;'
                    - CUSTOMERID=`echo "
                    - !Ref 'AWS::AccountId'
                    - '"|sha512sum|cut -d " " -f 1`;'
                    - NAME_SERVER=`/config/cloud/aws/getNameServer.sh mgmt`;
                    - nohup /config/waitThenRun.sh
                    - >-
                      f5-rest-node
                      /config/cloud/aws/node_modules/@f5devcentral/f5-cloud-libs/scripts/onboard.js
                    - >-
                      --install-ilx-package
                      file:///config/cloud/f5-appsvcs-3.13.1-1.noarch.rpm
                    - '--port 8443'
                    - '--ssl-port '
                    - !Ref managementGuiPort
                    - '--wait-for NETWORK_CONFIG_DONE'
                    - '--signal ONBOARD_DONE'
                    - '-o /var/log/cloud/aws/onboard.log'
                    - '--log-level silly'
                    - '--no-reboot'
                    - '--host localhost'
                    - '--user admin'
                    - '--password-url file:///config/cloud/aws/.adminPassword'
                    - '--password-encrypted'
                    - >-
                      --hostname `curl -s -f --retry 20
                      http://169.254.169.254/latest/meta-data/hostname`
                    - '--ntp '
                    - !Ref ntpServer
                    - '--tz '
                    - !Ref timezone
                    - '--dns ${NAME_SERVER}'
                    - '--module ltm:nominal'
                    - >-
                      --metrics
                      "cloudName:aws,region:${REGION},bigipVersion:14.1.0.3-0.0.6,customerId:${CUSTOMERID},deploymentId:${DEPLOYMENTID},templateName:f5-existing-stack-payg-1nic-bigip.template,templateVersion:4.2.0,licenseType:hourly"
                    - '-d tm.tcpudptxchecksum:software-only '
                    - '--ping'
                    - '&>> /var/log/cloud/aws/install.log < /dev/null &'
                - !Join 
                  - ' '
                  - - NAME_SERVER=`/config/cloud/aws/getNameServer.sh mgmt`;
                    - nohup /config/waitThenRun.sh
                    - >-
                      f5-rest-node
                      /config/cloud/aws/node_modules/@f5devcentral/f5-cloud-libs/scripts/onboard.js
                    - >-
                      --install-ilx-package
                      file:///config/cloud/f5-appsvcs-3.5.1-5.noarch.rpm
                    - '--port 8443'
                    - '--ssl-port '
                    - !Ref managementGuiPort
                    - '--wait-for NETWORK_CONFIG_DONE'
                    - '--signal ONBOARD_DONE'
                    - '-o /var/log/cloud/aws/onboard.log'
                    - '--log-level silly'
                    - '--no-reboot'
                    - '--host localhost'
                    - '--user admin'
                    - '--password-url file:///config/cloud/aws/.adminPassword'
                    - '--password-encrypted'
                    - >-
                      --hostname `curl -s -f --retry 20
                      http://169.254.169.254/latest/meta-data/hostname`
                    - '--ntp '
                    - !Ref ntpServer
                    - '--tz '
                    - !Ref timezone
                    - '--dns ${NAME_SERVER}'
                    - '--module ltm:nominal'
                    - '-d tm.tcpudptxchecksum:software-only '
                    - '--ping'
                    - '&>> /var/log/cloud/aws/install.log < /dev/null &'
            060-custom-config:
              command: !Join 
                - ' '
                - - nohup /config/waitThenRun.sh
                  - >-
                    f5-rest-node
                    /config/cloud/aws/node_modules/@f5devcentral/f5-cloud-libs/scripts/runScript.js
                  - '--file /config/cloud/aws/custom-config.sh'
                  - '--cwd /config/cloud/aws'
                  - '-o /var/log/cloud/aws/custom-config.log'
                  - '--log-level silly'
                  - '--wait-for ONBOARD_DONE'
                  - '--signal CUSTOM_CONFIG_DONE'
                  - '&>> /var/log/cloud/aws/install.log < /dev/null &'
            065-cluster:
              command: !Join 
                - ' '
                - []
            070-rm-password:
              command: !Join 
                - ' '
                - - nohup /config/waitThenRun.sh
                  - >-
                    f5-rest-node
                    /config/cloud/aws/node_modules/@f5devcentral/f5-cloud-libs/scripts/runScript.js
                  - '--file /config/cloud/aws/rm-password.sh'
                  - '-o /var/log/cloud/aws/rm-password.log'
                  - '--log-level silly'
                  - '--wait-for CUSTOM_CONFIG_DONE'
                  - '--signal PASSWORD_REMOVED'
                  - '&>> /var/log/cloud/aws/install.log < /dev/null &'
          files:
            /config/cloud/aws/custom-config.sh:
              content: !Join 
                - ''
                - - |
                    #!/bin/bash
                  - |
                    PROGNAME=$(basename $0)
                  - |
                    function error_exit {
                  - |
                    echo "${PROGNAME}: ${1:-\"Unknown Error\"}" 1>&2
                  - |
                    exit 1
                  - |
                    }
                  - |
                    declare -a tmsh=()
                  - |
                    echo 'starting custom-config.sh'
                  - |
                    tmsh+=(
                  - >
                    "tmsh load sys application template
                    /config/cloud/aws/f5.service_discovery.tmpl"
                  - >
                    "tmsh load sys application template
                    /config/cloud/aws/f5.cloud_logger.v1.0.0.tmpl"
                  - |
                    "tmsh save /sys config")
                  - |
                    for CMD in "${tmsh[@]}"
                  - |
                    do
                  - |2
                      "/config/cloud/aws/node_modules/@f5devcentral/f5-cloud-libs/scripts/waitForMcp.sh"
                  - |2
                        if $CMD;then
                  - |2
                            echo "command $CMD successfully executed."
                  - |2
                        else
                  - |2
                            error_exit "$LINENO: An error has occurred while executing $CMD. Aborting!"
                  - |2
                        fi
                  - |
                    done
                  - |
                    date
                  - |
                    ### START CUSTOM CONFIGURATION
                  - |
                    source /config/cloud/aws/onboard_config_vars
                  - |
                    echo "starting curl from $S3Bucket $DemoPublicKey "
                  - |
                    curl $S3Bucket/$DemoPublicKey >> /home/admin/.ssh/authorized_keys
                  - |
                    echo "modifying password"
                  - |
                    tmsh modify auth user admin password $passwd
                  - |
                    tmsh save sys config
                  - |
                    deployed="no"
                  - >
                    url_regex="(http:\/\/|https:\/\/)?[a-z0-9]+([\-\.]{1}[a-z0-9]+)*\.[a-z]{2,5}(:[0-9]{1,5})?(\/.*)?$"
                  - |
                    file_loc="/config/cloud/custom_config"
                  - |
                    if [[ $declarationUrl =~ $url_regex ]]; then
                  - |2
                      response_code=$(/usr/bin/curl -sk -w "%{http_code}" $declarationUrl -o $file_loc)
                  - |2
                      if [[ $response_code == 200 ]]; then
                  - |2
                        echo "Custom config download complete; checking for valid JSON."
                  - |2
                        cat $file_loc | jq .class
                  - |2
                        if [[ $? == 0 ]]; then
                  - |2
                          response_code=$(/usr/bin/curl -skvvu ${adminUsername}:$passwd -w "%{http_code}" -X POST -H "Content-Type: application/json" https://localhost:${managementGuiPort}/mgmt/shared/appsvcs/declare -d @$file_loc -o /dev/null)
                  - |2
                          if [[ $response_code == 200 || $response_code == 502 ]]; then
                  - |2
                            echo "Deployment of custom application succeeded."
                  - |2
                            deployed="yes"
                  - |2
                          else
                  - |2
                             echo "Failed to deploy custom application; continuing..."
                  - |2
                          fi
                  - |2
                        else
                  - |2
                          echo "Custom config was not valid JSON, continuing..."
                  - |2
                        fi
                  - |2
                      else
                  - |2
                        echo "Failed to download custom config; continuing..."
                  - |2
                      fi
                  - |
                    else
                  - |2
                      echo "Custom config was not a URL, continuing..."
                  - |
                    fi
                  - '### END CUSTOM CONFIGURATION'
              group: root
              mode: '000755'
              owner: root
            /config/cloud/aws/f5.cloud_logger.v1.0.0.tmpl:
              group: root
              mode: '000755'
              owner: root
              source: >-
                http://cdn.f5.com/product/cloudsolutions/iapps/common/f5-cloud-logger/v1.0.0/f5.cloud_logger.v1.0.0.tmpl
            /config/cloud/aws/f5.service_discovery.tmpl:
              group: root
              mode: '000755'
              owner: root
              source: >-
                http://cdn.f5.com/product/cloudsolutions/iapps/common/f5-service-discovery/v2.3.2/f5.service_discovery.tmpl
            /config/cloud/aws/getNameServer.sh:
              content: !Join 
                - |+

                - - INTERFACE=$1
                  - >-
                    INTERFACE_MAC=`ifconfig ${INTERFACE} | egrep ether | awk
                    '{print tolower($2)}'`
                  - >-
                    VPC_CIDR_BLOCK=`curl -s -f --retry 20
                    http://169.254.169.254/latest/meta-data/network/interfaces/macs/${INTERFACE_MAC}/vpc-ipv4-cidr-block`
                  - 'VPC_NET=${VPC_CIDR_BLOCK%/*}'
                  - >-
                    NAME_SERVER=`echo ${VPC_NET} | awk -F. '{ printf
                    "%d.%d.%d.%d", $1, $2, $3, $4+2 }'`
                  - echo $NAME_SERVER
              group: root
              mode: '000755'
              owner: root
            /config/cloud/aws/onboard_config_vars:
              content: !Join 
                - ''
                - - ''
                  - |
                    #!/bin/bash
                  - |
                    # Generated from 4.2.0
                  - >
                    hostname=`curl
                    http://169.254.169.254/latest/meta-data/hostname`
                  - region='
                  - !Ref 'AWS::Region'
                  - |
                    '
                  - |
                    adminUsername='admin'
                  - timezone='
                  - !Ref timezone
                  - |
                    '
                  - ntpServer='
                  - !Ref ntpServer
                  - |
                    '
                  - declarationUrl='
                  - !Ref declarationUrl
                  - |
                    '
                  - |
                    passwd='
                  - !Ref AdminPW  
                  - |
                    '                  
                  - managementGuiPort='
                  - !Ref managementGuiPort
                  - |
                    '
                  - S3Bucket=' 
                  - !Ref  S3Bucket
                  - |
                    '
                  - DemoPublicKey='
                  - !Ref DemoPublicKey
                  - |
                    '
                
              group: root
              mode: '000755'
              owner: root
            /config/cloud/aws/rm-password.sh:
              content: !Join 
                - ''
                - - |
                    #!/bin/bash
                  - |
                    PROGNAME=$(basename $0)
                  - |
                    function error_exit {
                  - |
                    echo "${PROGNAME}: ${1:-"Unknown Error"}" 1>&2
                  - |
                    exit 1
                  - |
                    }
                  - |
                    date
                  - |
                    echo 'starting rm-password.sh'
                  - |
                    declare -a tmsh=()
                  - |
                    tmsh+=("rm /config/cloud/aws/.adminPassword")
                  - |
                    for CMD in "${tmsh[@]}"
                  - |
                    do
                  - |2
                      if $CMD;then
                  - |2
                          echo "command $CMD successfully executed."
                  - |2
                      else
                  - |2
                          error_exit "$LINENO: An error has occurred while executing $CMD. Aborting!"
                  - |2
                      fi
                  - |
                    done
                  - |
                    date
              group: root
              mode: '000755'
              owner: root
            /config/cloud/f5-appsvcs-3.5.1-5.noarch.rpm:
              group: root
              mode: '000755'
              owner: root
              source: >-
                http://cdn.f5.com/product/cloudsolutions/f5-appsvcs-extension/v3.6.0/dist/lts/f5-appsvcs-3.5.1-5.noarch.rpm
            /config/cloud/f5-appsvcs-3.13.1-1.noarch.rpm:
              group: root
              mode: '000755'
              owner: root
              source: >-
                https://github.com/F5Networks/f5-appsvcs-extension/raw/master/dist/lts/3.13.1/f5-appsvcs-3.13.1-1.noarch.rpm
            /config/cloud/f5-cloud-libs-aws.tar.gz:
              group: root
              mode: '000755'
              owner: root
              source: >-
                http://cdn.f5.com/product/cloudsolutions/f5-cloud-libs-aws/v2.4.0/f5-cloud-libs-aws.tar.gz
            /config/cloud/f5-cloud-libs.tar.gz:
              group: root
              mode: '000755'
              owner: root
              source: >-
                https://raw.githubusercontent.com/F5Networks/f5-cloud-libs/v4.8.3/dist/f5-cloud-libs.tar.gz
            /config/installCloudLibs.sh:
              content: !Join 
                - |+

                - - '#!/bin/bash'
                  - echo about to execute
                  - checks=0
                  - 'while [ $checks -lt 120 ]; do echo checking mcpd'
                  - '    tmsh -a show sys mcp-state field-fmt | grep -q running'
                  - '    if [ $? == 0 ]; then'
                  - '        echo mcpd ready'
                  - '        break'
                  - '    fi'
                  - '    echo mcpd not ready yet'
                  - '    let checks=checks+1'
                  - '    sleep 10'
                  - done
                  - echo loading verifyHash script
                  - >-
                    if ! tmsh load sys config merge file /config/verifyHash;
                    then
                  - '    echo cannot validate signature of /config/verifyHash'
                  - '    exit'
                  - fi
                  - echo loaded verifyHash
                  - >-
                    declare -a
                    filesToVerify=("/config/cloud/f5-cloud-libs.tar.gz"
                    "/config/cloud/f5-cloud-libs-aws.tar.gz"
                    "/config/cloud/f5-appsvcs-3.5.1-5.noarch.rpm"
                    "/config/cloud/aws/f5.service_discovery.tmpl"
                    "/config/cloud/aws/f5.cloud_logger.v1.0.0.tmpl")
                  - 'for fileToVerify in "${filesToVerify[@]}"'
                  - do
                  - '    echo verifying "$fileToVerify"'
                  - '    if ! tmsh run cli script verifyHash "$fileToVerify"; then'
                  - '        echo "$fileToVerify" is not valid'
                  - '        exit 1'
                  - '    fi'
                  - '    echo verified "$fileToVerify"'
                  - done
                  - mkdir -p /config/cloud/aws/node_modules/@f5devcentral
                  - echo expanding f5-cloud-libs.tar.gz
                  - >-
                    tar xvfz /config/cloud/f5-cloud-libs.tar.gz -C
                    /config/cloud/aws/node_modules/@f5devcentral
                  - echo installing dependencies
                  - >-
                    tar xvfz /config/cloud/f5-cloud-libs-aws.tar.gz -C
                    /config/cloud/aws/node_modules/@f5devcentral
                  - echo cloud libs install complete
                  - touch /config/cloud/cloudLibsReady
              group: root
              mode: '000755'
              owner: root
            /config/verifyHash:
              content: |-
                cli script /Common/verifyHash {
                proc script::run {} {
                        if {[catch {
                            set hashes(f5-cloud-libs.tar.gz) 86d24521063640bfaaafa882f491974e39b46c700554dd8591d681139df25b0bed4dfe934545c2894e0a27a513ae7498a52e6deac00b5399f301badbfb8a91e0
                            set hashes(f5-cloud-libs-aws.tar.gz) 076c969cbfff12efacce0879820262b7787c98645f1105667cc4927d4acfe2466ed64c777b6d35957f6df7ae266937dde42fef4c8b1f870020a366f7f910ffb5
                            set hashes(f5-cloud-libs-azure.tar.gz) 57fae388e8aa028d24a2d3fa2c029776925011a72edb320da47ccd4fb8dc762321c371312f692b7b8f1c84e8261c280f6887ba2e0f841b50547e6e6abc8043ba
                            set hashes(f5-cloud-libs-gce.tar.gz) 1677835e69967fd9882ead03cbdd24b426627133b8db9e41f6de5a26fef99c2d7b695978ac189f00f61c0737e6dbb638d42dea43a867ef4c01d9507d0ee1fb2f
                            set hashes(f5-cloud-libs-openstack.tar.gz) 5c83fe6a93a6fceb5a2e8437b5ed8cc9faf4c1621bfc9e6a0779f6c2137b45eab8ae0e7ed745c8cf821b9371245ca29749ca0b7e5663949d77496b8728f4b0f9
                            set hashes(f5-cloud-libs-consul.tar.gz) a32aab397073df92cbbba5067e5823e9b5fafca862a258b60b6b40aa0975c3989d1e110f706177b2ffbe4dde65305a260a5856594ce7ad4ef0c47b694ae4a513
                            set hashes(asm-policy-linux.tar.gz) 63b5c2a51ca09c43bd89af3773bbab87c71a6e7f6ad9410b229b4e0a1c483d46f1a9fff39d9944041b02ee9260724027414de592e99f4c2475415323e18a72e0
                            set hashes(f5.http.v1.2.0rc4.tmpl) 47c19a83ebfc7bd1e9e9c35f3424945ef8694aa437eedd17b6a387788d4db1396fefe445199b497064d76967b0d50238154190ca0bd73941298fc257df4dc034
                            set hashes(f5.http.v1.2.0rc6.tmpl) 811b14bffaab5ed0365f0106bb5ce5e4ec22385655ea3ac04de2a39bd9944f51e3714619dae7ca43662c956b5212228858f0592672a2579d4a87769186e2cbfe
                            set hashes(f5.http.v1.2.0rc7.tmpl) 21f413342e9a7a281a0f0e1301e745aa86af21a697d2e6fdc21dd279734936631e92f34bf1c2d2504c201f56ccd75c5c13baa2fe7653213689ec3c9e27dff77d
                            set hashes(f5.aws_advanced_ha.v1.3.0rc1.tmpl) 9e55149c010c1d395abdae3c3d2cb83ec13d31ed39424695e88680cf3ed5a013d626b326711d3d40ef2df46b72d414b4cb8e4f445ea0738dcbd25c4c843ac39d
                            set hashes(f5.aws_advanced_ha.v1.4.0rc1.tmpl) de068455257412a949f1eadccaee8506347e04fd69bfb645001b76f200127668e4a06be2bbb94e10fefc215cfc3665b07945e6d733cbe1a4fa1b88e881590396
                            set hashes(f5.aws_advanced_ha.v1.4.0rc2.tmpl) 6ab0bffc426df7d31913f9a474b1a07860435e366b07d77b32064acfb2952c1f207beaed77013a15e44d80d74f3253e7cf9fbbe12a90ec7128de6facd097d68f
                            set hashes(f5.aws_advanced_ha.v1.4.0rc3.tmpl) 2f2339b4bc3a23c9cfd42aae2a6de39ba0658366f25985de2ea53410a745f0f18eedc491b20f4a8dba8db48970096e2efdca7b8efffa1a83a78e5aadf218b134
                            set hashes(f5.aws_advanced_ha.v1.4.0rc4.tmpl) 2418ac8b1f1884c5c096cbac6a94d4059aaaf05927a6a4508fd1f25b8cc6077498839fbdda8176d2cf2d274a27e6a1dae2a1e3a0a9991bc65fc74fc0d02ce963
                            set hashes(f5.aws_advanced_ha.v1.4.0rc5.tmpl) 5e582187ae1a6323e095d41eddd41151d6bd38eb83c634410d4527a3d0e246a8fc62685ab0849de2ade62b0275f51264d2deaccbc16b773417f847a4a1ea9bc4
                            set hashes(asm-policy.tar.gz) 2d39ec60d006d05d8a1567a1d8aae722419e8b062ad77d6d9a31652971e5e67bc4043d81671ba2a8b12dd229ea46d205144f75374ed4cae58cefa8f9ab6533e6
                            set hashes(deploy_waf.sh) 1a3a3c6274ab08a7dc2cb73aedc8d2b2a23cd9e0eb06a2e1534b3632f250f1d897056f219d5b35d3eed1207026e89989f754840fd92969c515ae4d829214fb74
                            set hashes(f5.policy_creator.tmpl) 06539e08d115efafe55aa507ecb4e443e83bdb1f5825a9514954ef6ca56d240ed00c7b5d67bd8f67b815ee9dd46451984701d058c89dae2434c89715d375a620
                            set hashes(f5.service_discovery.tmpl) 4811a95372d1dbdbb4f62f8bcc48d4bc919fa492cda012c81e3a2fe63d7966cc36ba8677ed049a814a930473234f300d3f8bced2b0db63176d52ac99640ce81b
                            set hashes(f5.cloud_logger.v1.0.0.tmpl) 64a0ed3b5e32a037ba4e71d460385fe8b5e1aecc27dc0e8514b511863952e419a89f4a2a43326abb543bba9bc34376afa114ceda950d2c3bd08dab735ff5ad20
                            set hashes(f5-appsvcs-3.5.1-5.noarch.rpm) ba71c6e1c52d0c7077cdb25a58709b8fb7c37b34418a8338bbf67668339676d208c1a4fef4e5470c152aac84020b4ccb8074ce387de24be339711256c0fa78c8

                            set file_path [lindex $tmsh::argv 1]
                            set file_name [file tail $file_path]

                            if {![info exists hashes($file_name)]} {
                                tmsh::log err "No hash found for $file_name"
                                exit 1
                            }

                            set expected_hash $hashes($file_name)
                            set computed_hash [lindex [exec /usr/bin/openssl dgst -r -sha512 $file_path] 0]
                            if { $expected_hash eq $computed_hash } {
                                exit 0
                            }
                            tmsh::log err "Hash does not match for $file_path"
                            exit 1
                        }]} {
                            tmsh::log err {Unexpected error in verifyHash}
                            exit 1
                        }
                    }
                    script-signature TjGIQtBj6gmevtbkCb9uwhrzm02aFer0KYwVeIvwBPssYRAJ7T/mc91LWODrSs9U12XAAtxQKHsG3XYWvklyB79fe/7C+589WvIhG814/OoXd1dplcH7O+EF5LBMdXEY4VQNw+5HuSl89tvBIkHGMCXSRAj8hHDIx9kqOF4OirExaJBZopb2qTY0P7AmhjpzFCvkJLUcmz7H5LZCfFCDYWWB5g5Bst7ZkLWfP2arMtxLRTFl/m6x4QttOeD9wktPGajn1XhvXThtzJ8vlTJJRuk/OyLJPr+64qkXwi3wngudiiZeFnCiI1Mrggp96B+yKtCqRsABJju6LMdH80T1Zg==
                    signing-key /Common/f5-irule
                }
              group: root
              mode: '000755'
              owner: root
            /config/waitThenRun.sh:
              content: !Join 
                - |+

                - - '#!/bin/bash'
                  - >-
                    while true; do echo "waiting for cloud libs install to
                    complete"
                  - '    if [ -f /config/cloud/cloudLibsReady ]; then'
                  - '        break'
                  - '    else'
                  - '        sleep 10'
                  - '    fi'
                  - done
                  - '"$@"'
              group: root
              mode: '000755'
              owner: root
    Properties:
      BlockDeviceMappings:
        - DeviceName: /dev/xvda
          Ebs:
            DeleteOnTermination: 'true'
            VolumeSize: '100'
            VolumeType: gp2
        - DeviceName: /dev/xvdb
          NoDevice: {}
      IamInstanceProfile: !Ref bigipServiceDiscoveryProfile
      ImageId: !If 
        - noCustomImageId
        - !FindInMap 
          - BigipRegionMap
          - !Ref 'AWS::Region'
          - !Ref imageName
        - !Ref customImageId
      InstanceType: !Ref instanceType
      KeyName: !Ref sshKey
      NetworkInterfaces:
        - Description: Public or External Interface
          DeviceIndex: '0'
          NetworkInterfaceId: !If 
            - useDynamicExternalIpAddr
            - !Ref Bigip1subnet1Az1Interface
            - !Ref Bigip1Staticsubnet1Az1Interface
      Tags:
        - Key: Application
          Value: !Ref application
        - Key: Costcenter
          Value: !Ref costcenter
        - Key: Environment
          Value: !Ref environment
        - Key: Group
          Value: !Ref group
        - Key: Name
          Value: !Join 
            - ''
            - - 'Big-IP: '
              - !Ref 'AWS::StackName'
        - Key: Owner
          Value: !Ref owner
      UserData: !Base64 
        'Fn::Join':
          - ''
          - - |
              #!/bin/bash
            - '/opt/aws/apitools/cfn-init/bin/cfn-init -v -s '
            - !Ref 'AWS::StackId'
            - ' -r '
            - Bigip1Instance
            - ' --region '
            - !Ref 'AWS::Region'
            - |+

    Type: 'AWS::EC2::Instance'
  Bigip1Staticsubnet1Az1Interface:
    Condition: useStaticExternalIpAddr
    Properties:
      Description: Public External Interface for the BIG-IP
      GroupSet:
        - !Ref bigipExternalSecurityGroup
      PrivateIpAddresses:
        - Primary: 'true'
          PrivateIpAddress: !Select 
            - '0'
            - !Split 
              - ','
              - !Ref subnet1Az1Address
        - Primary: 'false'
          PrivateIpAddress: !Select 
            - '1'
            - !Split 
              - ','
              - !Ref subnet1Az1Address
      SubnetId: !Ref subnet1Az1
    Type: 'AWS::EC2::NetworkInterface'
  Bigip1subnet1Az1Interface:
    Condition: useDynamicExternalIpAddr
    Properties:
      Description: Public External Interface for the BIG-IP
      GroupSet:
        - !Ref bigipExternalSecurityGroup
      SecondaryPrivateIpAddressCount: '1'
      SubnetId: !Ref subnet1Az1
    Type: 'AWS::EC2::NetworkInterface'
  Bigip1subnet1Az1SelfEipAddress:
    Properties:
      Domain: vpc
    Type: 'AWS::EC2::EIP'
  Bigip1subnet1Az1SelfEipAssociation:
    Properties:
      AllocationId: !GetAtt 
        - Bigip1subnet1Az1SelfEipAddress
        - AllocationId
      NetworkInterfaceId: !If 
        - useDynamicExternalIpAddr
        - !Ref Bigip1subnet1Az1Interface
        - !Ref Bigip1Staticsubnet1Az1Interface
      PrivateIpAddress: !If 
        - useDynamicExternalIpAddr
        - !GetAtt 
          - Bigip1subnet1Az1Interface
          - PrimaryPrivateIpAddress
        - !GetAtt 
          - Bigip1Staticsubnet1Az1Interface
          - PrimaryPrivateIpAddress
    Type: 'AWS::EC2::EIPAssociation'
  # DNSRecord:
  #   Type: 'AWS::Route53::RecordSet'
  #   Properties:
  #     HostedZoneName: example.com.
  #     Name: bigip.example.com.
  #     Type: A
  #     TTL: '900'
  #     ResourceRecords:
        
  #       - !GetAtt 
  #         - Bigip1Staticsubnet1Az1Interface
  #         - PrimaryPrivateIpAddress
  bigipExternalSecurityGroup:
    Properties:
      GroupDescription: 'Public or External interface rules, including BIG-IP management'
      SecurityGroupIngress:
        - CidrIp: !Ref restrictedSrcAddress
          FromPort: '22'
          IpProtocol: tcp
          ToPort: '22'
        - CidrIp: !Ref restrictedSrcAddress
          FromPort: !Ref managementGuiPort
          IpProtocol: tcp
          ToPort: !Ref managementGuiPort
        - CidrIp: !Ref restrictedSrcAddressApp
          FromPort: '80'
          IpProtocol: tcp
          ToPort: '80'
        - CidrIp: !Ref restrictedSrcAddressApp
          FromPort: '443'
          IpProtocol: tcp
          ToPort: '443'
      Tags:
        - Key: Application
          Value: !Ref application
        - Key: Costcenter
          Value: !Ref costcenter
        - Key: Environment
          Value: !Ref environment
        - Key: Group
          Value: !Ref group
        - Key: Name
          Value: !Join 
            - ''
            - - 'Bigip Security Group: '
              - !Ref 'AWS::StackName'
        - Key: Owner
          Value: !Ref owner
      VpcId: !Ref Vpc
    Type: 'AWS::EC2::SecurityGroup'
  bigipServiceDiscoveryAccessRole:
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action:
              - 'sts:AssumeRole'
            Effect: Allow
            Principal:
              Service:
                - ec2.amazonaws.com
        Version: 2012-10-17
      Path: /
      Policies:
        - PolicyDocument:
            Statement:
              - Action:
                  - 'ec2:DescribeInstances'
                  - 'ec2:DescribeInstanceStatus'
                  - 'ec2:DescribeAddresses'
                  - 'ec2:AssociateAddress'
                  - 'ec2:DisassociateAddress'
                  - 'ec2:DescribeNetworkInterfaces'
                  - 'ec2:DescribeNetworkInterfaceAttribute'
                  - 'ec2:DescribeRouteTables'
                  - 'ec2:ReplaceRoute'
                  - 'ec2:assignprivateipaddresses'
                  - 'sts:AssumeRole'
                Effect: Allow
                Resource:
                  - '*'
            Version: 2012-10-17
          PolicyName: BigipServiceDiscoveryPolicy
    Type: 'AWS::IAM::Role'
  bigipServiceDiscoveryProfile:
    Properties:
      Path: /
      Roles:
        - !Ref bigipServiceDiscoveryAccessRole
    Type: 'AWS::IAM::InstanceProfile'

